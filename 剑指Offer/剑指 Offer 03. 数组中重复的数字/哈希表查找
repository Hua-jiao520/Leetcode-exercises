找出数组中重复的数字。

在一个长度为 n 的数组 nums 里的所有数字都在 0～n-1 的范围内。数组中某些数字是重复的，
但不知道有几个数字重复了，也不知道每个数字重复了几次。请找出数组中任意一个重复的数字。

示例 1：

输入：
[2, 3, 1, 0, 2, 5, 3]
输出：2 或 3 

 

限制：

2 <= n <= 100000

== 错误思路 ==
class Solution {
    public int findRepeatNumber(int[] nums) {
        Set<Integer> set = new HashSet<>();
        for(int i = 0; i < nums.length; i++){
            set.add(nums[i]);
            //忽略了 加入到set数组中的元素是不允许不重复的
            //因此if语句和其后续的set语句并不能随意交换位置，会导致后续的if语句失去作用
                if(set.contains(nums[i])){
                return nums[i];
                }
        }
        return 1;
    }
}


== 正确思路 ==
public int findRepeatNumber(int[] nums) {
    // 1. 初始化一个哈希表
    Set<Integer> set = new HashSet<>();
    for (int i = 0; i < nums.length; i++) {
        // 2. 判断当前元素是否已经存在
        if (set.contains(nums[i])) {
            // 如果存在，则直接返回
            return nums[i];
        }
​
        // 否则的话，将当前元素放入到哈希表中，方便后续的查找判重
        set.add(nums[i]);
    }
    return -1;
}

时间复杂度：O(n)
